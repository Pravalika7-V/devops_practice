pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'pravalika7/devops_practice'  // Docker Hub repo
        DOCKER_IMAGE = 'devops_image'                   // Docker image name
        DOCKER_CREDENTIALS_ID = 'jenkinstoken'          // Updated Credentials ID for Docker Hub
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/Pravalika7-V/devops_practice.git', branch: 'main'
            }
        }

        stage('Print Environment Variables') {
            steps {
                script {
                    echo "Docker Hub Repo: ${DOCKER_HUB_REPO}"
                    echo "Docker Image: ${DOCKER_IMAGE}"
                    echo "Docker Credentials ID: ${DOCKER_CREDENTIALS_ID}"
                }
            }
        }

        stage('Check Docker Version') {
            steps {
                script {
                    bat 'docker --version'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_IMAGE}:latest ."
                }
            }
        }

        stage('Tag Docker Image') {
            steps {
                script {
                    bat "docker tag ${DOCKER_IMAGE}:latest ${DOCKER_HUB_REPO}:${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        bat "echo ${PASSWORD} | docker login -u ${USERNAME} --password-stdin"
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    bat "docker push ${DOCKER_HUB_REPO}:${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('Cleanup Docker Images') {
            steps {
                script {
                    bat "docker rmi ${DOCKER_HUB_REPO}:${DOCKER_IMAGE}:latest"
                }
            }
        }
    }
}
